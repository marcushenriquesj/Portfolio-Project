name: Deploy Blazor WASM to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: PortfolioWebsite/package-lock.json
          
      - name: Install dependencies
        working-directory: PortfolioWebsite
        run: npm ci
        
      - name: Build Blazor WASM application
        working-directory: PortfolioWebsite
        env:
          EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
          EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
          EMAILJS_USER_ID: ${{ secrets.EMAILJS_USER_ID }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
        run: npm run buildForPages

      - name: Verify Blazor build output
        run: |
          echo "=== Checking build output structure ==="
          ls -la PortfolioWebsite/dist/wwwroot/
          echo ""
          echo "=== Checking for Blazor framework files ==="
          ls -la PortfolioWebsite/dist/wwwroot/_framework/
          echo ""
          echo "=== Checking for MudBlazor content ==="
          ls -la PortfolioWebsite/dist/wwwroot/_content/
          echo ""
          echo "=== Checking for .nojekyll file ==="
          ls -la PortfolioWebsite/dist/wwwroot/.nojekyll
          echo ""
          echo "=== Checking for 404.html ==="
          ls -la PortfolioWebsite/dist/wwwroot/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './PortfolioWebsite/dist/wwwroot'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
