@using PortfolioWebsite.Models

<div class="hero-section" id="hero">
    <div class="hero-container">
        <MudGrid>
            <MudItem xs="12" md="6" Class="d-flex align-center">
                <div class="hero-content">
                    <MudText Typo="Typo.body2" Class="hero-intro mb-2">
                        - Introducing
                    </MudText>
                    <MudText Typo="Typo.h2" Class="hero-greeting mb-3">
                        Hello I'm @PortfolioData.Name
                    </MudText>
                    
                    <div class="hero-social-links mb-4">
                        @if (PortfolioData.SocialLinks.Count > 0)
                        {
                            <a href="@PortfolioData.SocialLinks[0]" target="_blank" class="hero-social-link github" title="GitHub">
                                <img src="images/githubicon.svg" alt="GitHub" class="hero-social-icon" />
                            </a>
                        }
                        @if (PortfolioData.SocialLinks.Count > 1)
                        {
                            <a href="@PortfolioData.SocialLinks[1]" target="_blank" class="hero-social-link linkedin" title="LinkedIn">
                                <img src="images/linkedin.svg" alt="LinkedIn" class="hero-social-icon" />
                            </a>
                        }
                    </div>
                    
                    <MudText Typo="Typo.body1" Class="hero-subtitle mb-6">
                       Architecting scalable systems and building responsive applications with C#, Blazor & Azure.
                    </MudText>
                    
                    <div class="hero-actions">
                        <MudButton Variant="Variant.Filled" 
                                  Color="Color.Warning" 
                                  Size="Size.Large" 
                                  Class="contact-btn"
                                  OnClick="@(() => Navigation.NavigateTo("/contact"))">
                            Contact Me
                        </MudButton>
                        <MudButton Variant="Variant.Outlined" 
                                  Color="Color.Primary" 
                                  Size="Size.Large" 
                                  Class="about-btn"
                                  OnClick="@(() => Navigation.NavigateTo("/about"))">
                            About Me
                        </MudButton>
                    </div>
                </div>
            </MudItem>
            
            <MudItem xs="12" md="6" Class="d-flex align-center justify-center">
                <div class="hero-avatar-container">
                    <div class="skills-background">
                        <div class="skill-node" style="top: 20%; left: 20%;" title="Azure">
                            <img src="images/azure.svg" alt="Azure" class="skill-node-icon" />
                        </div>
                        <div class="skill-node" style="top: 20%; right: 20%;" title="C#">
                            <img src="images/csharp.svg" alt="C#" class="skill-node-icon" />
                        </div>
                        <div class="skill-node" style="bottom: 45%; left: 8%;" title="SQL">
                            <img src="images/sql.svg" alt="SQL" class="skill-node-icon" />
                        </div>
                        <div class="skill-node" style="bottom: 45%; right: 8%;" title="Blazor">
                            <img src="images/blazor.svg" alt="Blazor" class="skill-node-icon" />
                        </div>
                    </div>
                    <div class="avatar-container">
                        <img src="/images/my-avatar.png" alt="@PortfolioData.Name" class="hero-avatar" />
                    </div>
                </div>
            </MudItem>
        </MudGrid>
        
        <MudGrid Class="mt-16">
            <MudItem xs="12" md="4" Class="d-flex align-center">
                <div class="skills-cta">
                    <MudText Typo="Typo.body2" Class="skills-intro mb-2">
                        - My Skills
                    </MudText>
                    <MudText Typo="Typo.h4" Class="skills-title">
                        What I Bring to Your Team
                    </MudText>
                </div>
            </MudItem>
            <MudItem xs="12" md="8">
                <div class="skills-grid">
                    <div class="skill-card" @onclick="() => ShowSkillDetails(0)">
                        <div class="skill-icon">
                            <MudIcon Icon="@Icons.Material.Filled.Code" Color="Color.Success" />
                        </div>
                        <div class="skill-content">
                            <MudText Typo="Typo.h6" Class="skill-title">Full-Stack Development</MudText>
                            <MudText Typo="Typo.body2" Class="skill-description">Enterprise applications with C#, Blazor & Azure</MudText>
                        </div>
                    </div>
                    <div class="skill-card" @onclick="() => ShowSkillDetails(1)">
                        <div class="skill-icon">
                            <MudIcon Icon="@Icons.Material.Filled.Cloud" Color="Color.Success" />
                        </div>
                        <div class="skill-content">
                            <MudText Typo="Typo.h6" Class="skill-title">Cloud Architecture</MudText>
                            <MudText Typo="Typo.body2" Class="skill-description">Scalable solutions using Azure DevOps & microservices</MudText>
                        </div>
                    </div>
                    <div class="skill-card" @onclick="() => ShowSkillDetails(2)">
                        <div class="skill-icon">
                            <MudIcon Icon="@Icons.Material.Filled.Storage" Color="Color.Success" />
                        </div>
                        <div class="skill-content">
                            <MudText Typo="Typo.h6" Class="skill-title">Database Engineering</MudText>
                            <MudText Typo="Typo.body2" Class="skill-description">Optimized SQL Server & Entity Framework implementations</MudText>
                        </div>
                    </div>
                    <div class="skill-card" @onclick="() => ShowSkillDetails(3)">
                        <div class="skill-icon">
                            <MudIcon Icon="@Icons.Material.Filled.Group" Color="Color.Success" />
                        </div>
                        <div class="skill-content">
                            <MudText Typo="Typo.h6" Class="skill-title">Team Leadership</MudText>
                            <MudText Typo="Typo.body2" Class="skill-description">Mentoring developers & driving coding standards</MudText>
                        </div>
                    </div>
                </div>
            </MudItem>
        </MudGrid>
    </div>
</div>

<SkillDetailsDialog @bind-IsVisible="isSkillDialogVisible"
                   SkillTitle="@currentSkill.Title"
                   SkillIcon="@currentSkill.Icon"
                   SkillOverview="@currentSkill.Overview"
                   SkillDetails="@currentSkill.Details"
                   Experience="@currentSkill.Experience" />

@code {
    [Parameter] public PortfolioData PortfolioData { get; set; } = new();

    [Inject] private NavigationManager Navigation { get; set; } = default!;

    private bool isSkillDialogVisible = false;
    private SkillData currentSkill = new();

    private readonly List<SkillData> skillsData = new()
    {
        new SkillData
        {
            Title = "Full-Stack Development",
            Icon = Icons.Material.Filled.Code,
            Overview = "Comprehensive expertise in building enterprise-grade applications from frontend to backend, with a focus on modern web technologies and scalable architecture.",
            Details = new List<string>
            {
                "C# .NET Core development",
                "Blazor WebAssembly applications",
                "React.js frameworks",
                "RESTful APIs & Web Services",
                "Responsive design & UI/UX",
                "Performance optimization",
                "Git & Azure DevOps",
                "Agile methodologies",
                "CI/CD pipelines"
            },
            Experience = "Led development of multiple enterprise applications serving 10,000+ users, implemented CI/CD pipelines reducing deployment time, and mentored junior developers in full-stack best practices."
        },
        new SkillData
        {
            Title = "Cloud Architecture",
            Icon = Icons.Material.Filled.Cloud,
            Overview = "Design and implementation of scalable cloud-native solutions using Microsoft Azure, with expertise in microservices architecture and DevOps practices.",
            Details = new List<string>
            {
                "Azure App Services",
                "Azure SQL Database",
                "Azure DevOps CI/CD",
                "Microservices architecture",
                "Docker containerization",
                "Azure Active Directory",
                "Cloud monitoring & logging",
                "Infrastructure as Code",
                "ARM templates"
            },
            Experience = "Architected and deployed cloud solutions for 5+ enterprise clients, implemented microservices reducing system downtime by 80%, and established automated deployment processes saving 40+ hours per release cycle."
        },
        new SkillData
        {
            Title = "Database Engineering",
            Icon = Icons.Material.Filled.Storage,
            Overview = "Expert-level database design, optimization, and management with focus on SQL Server and Entity Framework, ensuring data integrity and performance.",
            Details = new List<string>
            {
                "SQL Server optimization",
                "Entity Framework Core",
                "Performance tuning",
                "Stored procedures",
                "Data migration & ETL",
                "Database security",
                "Backup strategies",
                "Disaster recovery",
                "Query optimization"
            },
            Experience = "Optimized database queries improving performance by 300%, designed schemas for applications handling 1B+ records, and implemented data migration strategies for legacy system modernization."
        },
        new SkillData
        {
            Title = "Team Leadership",
            Icon = Icons.Material.Filled.Group,
            Overview = "Proven leadership in technical teams, driving coding standards, mentoring developers, and delivering high-quality software solutions through collaborative development.",
            Details = new List<string>
            {
                "Team leadership",
                "Code reviews",
                "Mentoring developers",
                "Agile/Scrum methodology",
                "Technical documentation",
                "Project planning",
                "Stakeholder communication",
                "Performance management",
                "Sprint estimation"
            },
            Experience = "Led development teams of 3-5 overseas engineers across 3 major projects, established coding standards reducing bugs by 45%, and mentored 4+ developers who advanced positions."
        }
    };

    private void ShowSkillDetails(int skillIndex)
    {
        if (skillIndex >= 0 && skillIndex < skillsData.Count)
        {
            currentSkill = skillsData[skillIndex];
            isSkillDialogVisible = true;
        }
    }

    /// <summary>
    /// Represents detailed skill information for the skill details dialog.
    /// </summary>
    public class SkillData
    {
        /// <summary>
        /// The title of the skill.
        /// </summary>
        public string Title { get; set; } = "";
        
        /// <summary>
        /// The Material Design icon identifier.
        /// </summary>
        public string Icon { get; set; } = "";
        
        /// <summary>
        /// Overview description of the skill.
        /// </summary>
        public string Overview { get; set; } = "";
        
        /// <summary>
        /// Detailed list of skill competencies.
        /// </summary>
        public List<string> Details { get; set; } = new();
        
        /// <summary>
        /// Experience description with specific achievements.
        /// </summary>
        public string Experience { get; set; } = "";
    }
}


