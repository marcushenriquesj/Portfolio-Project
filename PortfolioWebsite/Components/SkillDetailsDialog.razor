@using Microsoft.AspNetCore.Components

<MudDialog @bind-IsVisible="IsVisible" Class="skill-dialog">
    <DialogContent>
        <div class="dialog-header">
            <div class="skill-icon-large">
                <MudIcon Icon="@SkillIcon" Color="Color.Success" />
            </div>
            <h3 class="dialog-title">@SkillTitle</h3>
        </div>
        
        <div class="skill-overview">
            @((MarkupString)SkillOverview)
        </div>
        
        <div class="skills-subtitle mt-4 mb-2">Key Skills & Technologies:</div>
        <div class="skills-grid-detailed">
            @foreach (var skill in SkillDetails)
            {
                <div class="skill-item">
                    <div class="skill-check">
                        <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Success" />
                    </div>
                    <p class="skill-text">@((MarkupString)skill)</p>
                </div>
            }
        </div>
        
        <div class="experience-section">
            <div class="experience-subtitle mb-2">Professional Experience:</div>
            <div class="experience-text">
                @((MarkupString)Experience)
            </div>
        </div>
    </DialogContent>
    
    <DialogActions>
        <MudButton OnClick="CloseDialog" Color="Color.Primary">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public string SkillTitle { get; set; } = "";
    [Parameter] public string SkillIcon { get; set; } = "";
    [Parameter] public string SkillOverview { get; set; } = "";
    [Parameter] public List<string> SkillDetails { get; set; } = new();
    [Parameter] public string Experience { get; set; } = "";

    private async Task CloseDialog()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(IsVisible);
    }
}
