@using PortfolioWebsite.Models

<MudDialog @bind-IsVisible="IsVisible" Options="dialogOptions" Class="skill-dialog">
    <TitleContent>
        <div class="dialog-header">
            <div class="skill-icon-large">
                <MudIcon Icon="@SkillIcon" Color="Color.Success" />
            </div>
            <MudText Typo="Typo.h5" Class="dialog-title">@SkillTitle</MudText>
        </div>
    </TitleContent>
    <DialogContent>
        <div class="skill-details">
            <MudText Typo="Typo.body1" Class="skill-overview mb-4">
                @SkillOverview
            </MudText>
            
            <div class="skills-list">
                <MudText Typo="Typo.h6" Class="skills-subtitle mb-3">Key Technologies & Skills</MudText>
                <div class="skills-grid-detailed">
                    @foreach (var skill in SkillDetails)
                    {
                        <div class="skill-item">
                            <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" Class="skill-check" />
                            <MudText Typo="Typo.body2" Class="skill-text">@skill</MudText>
                        </div>
                    }
                </div>
            </div>
            
            @if (!string.IsNullOrEmpty(Experience))
            {
                <div class="experience-section mt-4">
                    <MudText Typo="Typo.h6" Class="experience-subtitle mb-3">Relevant Experience</MudText>
                    <MudText Typo="Typo.body2" Class="experience-text">@Experience</MudText>
                </div>
            }
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CloseDialog" Variant="Variant.Text" Color="Color.Primary">
            Close
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public string SkillTitle { get; set; } = "";
    [Parameter] public string SkillIcon { get; set; } = "";
    [Parameter] public string SkillOverview { get; set; } = "";
    [Parameter] public List<string> SkillDetails { get; set; } = new();
    [Parameter] public string Experience { get; set; } = "";

    private DialogOptions dialogOptions = new()
    {
        CloseOnEscapeKey = true,
        MaxWidth = MaxWidth.Medium,
        FullWidth = true,
        DisableBackdropClick = false
    };

    private async Task CloseDialog()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(false);
    }
}
