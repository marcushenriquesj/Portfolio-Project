@using PortfolioWebsite.Models

<MudContainer MaxWidth="MaxWidth.Large" Class="section-container" id="experience">
    <MudText Typo="Typo.h3" Class="section-title text-center mb-6">
        Work Experience
    </MudText>
    
    <div class="timeline-container">
        @for (int i = 0; i < Experience.Count; i++)
        {
            var exp = Experience[i];
            var isEven = i % 2 == 0;
            
            <div class="timeline-item @(isEven ? "left" : "right")">
                <div class="timeline-content">
                    <MudPaper Elevation="3" Class="experience-card pa-4">
                        <div class="experience-header">
                            <MudIcon Icon="@exp.Icon" Color="Color.Primary" Size="Size.Large" Class="mr-3" />
                            <div class="experience-info">
                                <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-1">
                                    @exp.Title
                                </MudText>
                                <MudText Typo="Typo.body1" Class="mb-1">
                                    @exp.Company
                                </MudText>
                                <MudChip Color="Color.Secondary" Size="Size.Small">
                                    @exp.Period
                                </MudChip>
                            </div>
                        </div>
                        
                        <MudDivider Class="my-3" />
                        
                        <MudText Typo="Typo.body2" Class="mb-3">
                            @exp.Description
                        </MudText>
                        
                        @if (exp.Achievements.Any())
                        {
                            <MudText Typo="Typo.h6" Class="mb-2">Key Achievements:</MudText>
                            <ul class="achievements-list">
                                @foreach (var achievement in exp.Achievements)
                                {
                                    <li>
                                        <MudText Typo="Typo.body2">@achievement</MudText>
                                    </li>
                                }
                            </ul>
                        }
                        
                        <MudButton Variant="Variant.Text" 
                                  Color="Color.Primary" 
                                  Size="Size.Small"
                                  OnClick="@(() => ShowExperienceDetails(exp))"
                                  Class="mt-2">
                            View Details
                        </MudButton>
                    </MudPaper>
                </div>
            </div>
        }
    </div>
    
    <!-- Experience Summary -->
    <MudContainer Class="mt-8">
        <MudPaper Elevation="3" Class="pa-6">
            <MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4 text-center">
                Experience Summary
            </MudText>
            
            <MudGrid>
                <MudItem xs="12" md="4">
                    <div class="summary-item text-center">
                        <MudIcon Icon="@Icons.Material.Filled.Work" Color="Color.Primary" Size="Size.Large" />
                        <MudText Typo="Typo.h4" Class="mt-2">@Experience.Count</MudText>
                        <MudText Typo="Typo.body1">Years of Experience</MudText>
                    </div>
                </MudItem>
                
                <MudItem xs="12" md="4">
                    <div class="summary-item text-center">
                        <MudIcon Icon="@Icons.Material.Filled.Business" Color="Color.Primary" Size="Size.Large" />
                        <MudText Typo="Typo.h4" Class="mt-2">@Experience.Select(e => e.Company).Distinct().Count()</MudText>
                        <MudText Typo="Typo.body1">Companies Worked</MudText>
                    </div>
                </MudItem>
                
                <MudItem xs="12" md="4">
                    <div class="summary-item text-center">
                        <MudIcon Icon="@Icons.Material.Filled.Star" Color="Color.Primary" Size="Size.Large" />
                        <MudText Typo="Typo.h4" Class="mt-2">@Experience.Sum(e => e.Achievements.Count)</MudText>
                        <MudText Typo="Typo.body1">Key Achievements</MudText>
                    </div>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudContainer>
</MudContainer>

@code {
    [Parameter] public List<Experience> Experience { get; set; } = new();
    
    [Inject] private IDialogService DialogService { get; set; } = default!;

    private async Task ShowExperienceDetails(Experience experience)
    {
        var parameters = new DialogParameters
        {
            ["Experience"] = experience
        };
        
        var dialog = await DialogService.ShowAsync<ExperienceDetailsDialog>("Experience Details", parameters);
        var result = await dialog.Result;
    }
}


